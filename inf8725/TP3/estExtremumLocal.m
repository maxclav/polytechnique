function [ bool ] = ...
    estExtremumLocal(DoGAvant, DoG, DoGApres, positionX, positionY)
%ESTEXTREMUMLOCAL Détecte si un point est un extrémum local par rapport à
%ses 26 voisins.
%   Compare le point d'un DoG avec ses 8 voisisin immédiats, ses 9 voisins
%   du DoG avant et les 9 voisins de celui d'après.
    
    % Est-ce un maximum local?
    if (DoG(positionX,positionY) > DoG(positionX+1,positionY) ...
    && DoG(positionX,positionY) > DoG(positionX-1,positionY) ...
    && DoG(positionX,positionY) > DoG(positionX,positionY+1) ...
    && DoG(positionX,positionY) > DoG(positionX,positionY-1) ...
    && DoG(positionX,positionY) > DoG(positionX+1,positionY+1) ...
    && DoG(positionX,positionY) > DoG(positionX-1,positionY+1) ...
    && DoG(positionX,positionY) > DoG(positionX+1,positionY-1) ...
    && DoG(positionX,positionY) > DoG(positionX-1,positionY-1) ...
    ...
    && DoG(positionX,positionY) > DoGAvant(positionX,positionY) ...
    && DoG(positionX,positionY) > DoGAvant(positionX+1,positionY) ...
    && DoG(positionX,positionY) > DoGAvant(positionX-1,positionY) ...
    && DoG(positionX,positionY) > DoGAvant(positionX,positionY+1) ...
    && DoG(positionX,positionY) > DoGAvant(positionX,positionY-1) ...
    && DoG(positionX,positionY) > DoGAvant(positionX+1,positionY+1) ...
    && DoG(positionX,positionY) > DoGAvant(positionX-1,positionY+1) ...
    && DoG(positionX,positionY) > DoGAvant(positionX+1,positionY-1) ...
    && DoG(positionX,positionY) > DoGAvant(positionX-1,positionY-1) ...
    ...                    
    && DoG(positionX,positionY) > DoGApres(positionX,positionY) ...
    && DoG(positionX,positionY) > DoGApres(positionX+1,positionY) ...
    && DoG(positionX,positionY) > DoGApres(positionX-1,positionY) ...
    && DoG(positionX,positionY) > DoGApres(positionX,positionY+1) ...
    && DoG(positionX,positionY) > DoGApres(positionX,positionY-1) ...
    && DoG(positionX,positionY) > DoGApres(positionX+1,positionY+1) ...
    && DoG(positionX,positionY) > DoGApres(positionX-1,positionY+1) ...
    && DoG(positionX,positionY) > DoGApres(positionX+1,positionY-1) ...
    && DoG(positionX,positionY) > DoGApres(positionX-1,positionY-1))
        bool = 1;
        
    % Est-ce un minimum local?
    elseif (DoG(positionX,positionY) < DoG(positionX+1,positionY) ...
    && DoG(positionX,positionY) < DoG(positionX-1,positionY) ...
    && DoG(positionX,positionY) < DoG(positionX,positionY+1) ...
    && DoG(positionX,positionY) < DoG(positionX,positionY-1) ...
    && DoG(positionX,positionY) < DoG(positionX+1,positionY+1) ...
    && DoG(positionX,positionY) < DoG(positionX-1,positionY+1) ...
    && DoG(positionX,positionY) < DoG(positionX+1,positionY-1) ...
    && DoG(positionX,positionY) < DoG(positionX-1,positionY-1) ...
    ...
    && DoG(positionX,positionY) < DoGAvant(positionX,positionY) ...
    && DoG(positionX,positionY) < DoGAvant(positionX+1,positionY) ...
    && DoG(positionX,positionY) < DoGAvant(positionX-1,positionY) ...
    && DoG(positionX,positionY) < DoGAvant(positionX,positionY+1) ...
    && DoG(positionX,positionY) < DoGAvant(positionX,positionY-1) ...
    && DoG(positionX,positionY) < DoGAvant(positionX+1,positionY+1) ...
    && DoG(positionX,positionY) < DoGAvant(positionX-1,positionY+1) ...
    && DoG(positionX,positionY) < DoGAvant(positionX+1,positionY-1) ...
    && DoG(positionX,positionY) < DoGAvant(positionX-1,positionY-1) ...
    ...                    
    && DoG(positionX,positionY) < DoGApres(positionX,positionY) ...
    && DoG(positionX,positionY) < DoGApres(positionX+1,positionY) ...
    && DoG(positionX,positionY) < DoGApres(positionX-1,positionY) ...
    && DoG(positionX,positionY) < DoGApres(positionX,positionY+1) ...
    && DoG(positionX,positionY) < DoGApres(positionX,positionY-1) ...
    && DoG(positionX,positionY) < DoGApres(positionX+1,positionY+1) ...
    && DoG(positionX,positionY) < DoGApres(positionX-1,positionY+1) ...
    && DoG(positionX,positionY) < DoGApres(positionX+1,positionY-1) ...
    && DoG(positionX,positionY) < DoGApres(positionX-1,positionY-1))
        bool = 1;
    else
        % Pas un extrémum
        bool = 0;
    end
    
end

